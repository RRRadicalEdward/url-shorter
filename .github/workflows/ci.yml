name: CI

on: [push, pull_request]

jobs:
  build:
    name: Test rust ${{ matrix.rust }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, "windows-latest"]
        mongodb-version: ['4.4']
        rust: [stable]
        include:
          - os: ubuntu-latest
            sccache-path: /home/runner/.cache/sccache
            rustc-wrapper: sccache
          - os: windows-latest
            rustc-wrapper:
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: ${{ matrix.rustc-wrapper }}
      RUSTV: ${{ matrix.rust }}
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
    steps:
      - uses: actions/checkout@v2
      - name: Install sccache (ubuntu-latest)
        if: matrix.os == 'ubuntu-latest'
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.2.15
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod a+x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          target: wasm32-unknown-unknown
          components: rustfmt, clippy
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Save sccache
        if: matrix.os != 'windows-latest'
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: ${{ matrix.sccache-path }}
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-
      - name: Start MongoDB on Ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
        uses: DigiPie/mongo-action@v1.0.1
        with:
          image-version: ${{ matrix.mongodb-version }}
          port: 27017
      - name: Start MongoDB on Windows-latest
        if: matrix.os == 'windows-latest'
        run: |
          Stop-Service docker
          Stop-service hns
          Start-service hns
          Start-Service docker
          docker network prune
          echo "docker run --name mongo -d -p 27017:27017 mongo:latest"
          docker run --name mongo -d -p 27017:27017 mongo:latest
        shell: powershell
      - name: Test MongoDB connection on Ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
        run: "sudo mongo localhost:27017"
      - name: Test MongoDB connection on Windows-latest
        if: matrix.os == 'windows-latest'
        run: "mongo localhost:27017"
      - name: Start sccache server
        if: matrix.os != 'windows-latest'
        run: sccache --start-server
      - name: Run CargoFmt
        run: cargo fmt --all -- --check
      - name: Run Clippy
        run: cargo clippy --all-features --all-targets -- -D warnings
      - name: Run tests frontend
        run: cargo test --manifest-path url-shorter-frontend/Cargo.toml --verbose
      - name: Run tests backend
        run: cargo test --manifest-path url-shorter-backend/Cargo.toml --verbose
      - name: Build release frontend 
        run: cargo build --verbose --manifest-path url-shorter-frontend/Cargo.toml --target wasm32-unknown-unknown --release
      - name: Build release backend
        run: cargo build --verbose --manifest-path url-shorter-backend/Cargo.toml --release
      - name: Print sccache stats
        if: matrix.os != 'windows-latest'
        run: sccache --show-stats
      - name: Stop sccache server
        if: matrix.os != 'windows-latest'
        run: sccache --stop-server || true